# Expected Output for Date Type Operations
# Based on the input.txt operations

# Create dates and validate them
Date 2024-09-09: Valid
Date 2024-02-29: Valid (leap year)
Date 2023-02-29: Invalid (not leap year)
Date 2024-13-01: Invalid (month > 12)
Date 2024-04-31: Invalid (April has 30 days)

# String parsing
Parsed 2024-12-25: Success
Parsed 2024-01-01: Success
Parsed invalid-date: Failed
Parsed 2023-02-29: Failed (invalid date)

# Date comparisons
Compare 2024-09-09 with 2024-09-10: -1 (first is earlier)
Compare 2024-12-25 with 2024-01-01: 1 (first is later)
Compare 2024-06-15 with 2024-06-15: 0 (equal)

# Date arithmetic
Days between 2024-09-09 and 2024-09-19: 10
Days between 2024-01-01 and 2024-12-31: 365
Add 100 days to 2024-09-09: 2024-12-18
Add 1 day to 2024-12-31: 2025-01-01
Add -10 days to 2024-09-19: 2024-09-09

# Leap year tests
2024 is leap year: true
2023 is leap year: false
2000 is leap year: true
1900 is leap year: false

# Days in month
Days in February 2024: 29
Days in February 2023: 28
Days in April 2024: 30
Days in December 2024: 31